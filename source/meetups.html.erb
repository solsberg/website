---
title: "Meetups"
---

<h1>Meetups around the world</h1>

<div class="meetups section map">
  <h2>Find a meetup in your city</h2>
  <div id="map"></div>
</div>

<div class="meetups section list">
  <table class="columns">
    <tr>
      <% data.meetups.each do |name, groups| %>
        <td>
          <h3><%= name %></h3>
          <ul>
            <% groups.sort_by(&:location).each do |group| %>
              <li><%= link_to group.location, group.url %></li>
            <% end %>
          </ul>
        </td>
      <% end %>
    </tr>
  </table>
</div>

<div class="meetups section start">
  <h2>Start your own meetup</h2>
  <div class="image"></div>
</div>

<script>
  var handler = Gmaps.build('Google');
  var styles = [
    {
      featureType: "road",
      elementType: "geometry",
      stylers: [
        { lightness: 100 },
        { visibility: "simplified" }
      ]
    },{
      featureType: "road",
      elementType: "labels",
      stylers: [
        { visibility: "off" }
      ]
    },{
      featureType: "poi",
      stylers: [
       { visibility: "off" }
      ]
    },{
      "featureType": "poi",
      "elementType": "labels.text",
      "stylers": [
        { visibility: "off" }
      ]
    },{
      "featureType": "transit",
      "stylers": [
        { visibility: "off" }
      ]
    }
  ];
  handler.buildMap({
    provider: {
      styles: styles,
      streetViewControl: false,
      panControl: false,
      zoomControlOptions: {
        style: google.maps.ZoomControlStyle.SMALL
      },
    },
    internal: {
      id: 'map'
    }
  }, function(){
    markers = handler.addMarkers(<%= markers_hash.to_json %>);
    handler.bounds.extendWith(markers);
    // handler.fitMapToBounds();
    if(navigator.geolocation){
      navigator.geolocation.getCurrentPosition(function(position){
        var pos = new google.maps.LatLng(position.coords.latitude,
                                       position.coords.longitude);
        handler.map.centerOn(pos);
        handler.map.serviceObject.setZoom(8);
      }, handler.fitMapToBounds.bind(handler));
    }
    else {
      handler.fitMapToBounds();
    }
  });
</script>